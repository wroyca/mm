// Generated by generate_wrap_init.pl -- DO NOT MODIFY!

#define GLIBMM_INCLUDED_FROM_WRAP_INIT_CC
#include <glibmm.h>
#include <pangomm/wrap_init.h>
#include <glibmm/error.h>
#include <glibmm/object.h>

// #include the widget headers so that we can call the get_type() static methods:
#include "attributes.h"
#include "attriter.h"
#include "attrlist.h"
#include "cairofontmap.h"
#include "color.h"
#include "context.h"
#include "coverage.h"
#include "font.h"
#include "fontdescription.h"
#include "fontface.h"
#include "fontfamily.h"
#include "fontmap.h"
#include "fontmetrics.h"
#include "fontset.h"
#include "glyph.h"
#include "glyphitem.h"
#include "glyphstring.h"
#include "item.h"
#include "language.h"
#include "layout.h"
#include "layoutiter.h"
#include "layoutline.h"
#include "rectangle.h"
#include "renderer.h"
#include "tabarray.h"

extern "C"
{
//Declarations of the *_get_type() functions:

GType pango_context_get_type(void);
GType pango_font_get_type(void);
GType pango_font_face_get_type(void);
GType pango_font_family_get_type(void);
GType pango_font_map_get_type(void);
GType pango_fontset_get_type(void);
GType pango_layout_get_type(void);
GType pango_renderer_get_type(void);

//Declarations of the *_error_quark() functions:

} // extern "C"

namespace Pango {

//Declarations of the *_Class::wrap_new() methods, instead of including all the private headers:

class Context_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Font_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FontFace_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FontFamily_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FontMap_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Fontset_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Layout_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Renderer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };

void wrap_init()
{
  // Register Error domains in the main namespace:

  // Map gtypes to gtkmm wrapper-creation functions:
  Glib::wrap_register(pango_context_get_type(), &Context_Class::wrap_new);
  Glib::wrap_register(pango_font_get_type(), &Font_Class::wrap_new);
  Glib::wrap_register(pango_font_face_get_type(), &FontFace_Class::wrap_new);
  Glib::wrap_register(pango_font_family_get_type(), &FontFamily_Class::wrap_new);
  Glib::wrap_register(pango_font_map_get_type(), &FontMap_Class::wrap_new);
  Glib::wrap_register(pango_fontset_get_type(), &Fontset_Class::wrap_new);
  Glib::wrap_register(pango_layout_get_type(), &Layout_Class::wrap_new);
  Glib::wrap_register(pango_renderer_get_type(), &Renderer_Class::wrap_new);

  // Register the gtkmm gtypes:
  g_type_ensure(Context::get_type());
  g_type_ensure(Font::get_type());
  g_type_ensure(FontFace::get_type());
  g_type_ensure(FontFamily::get_type());
  g_type_ensure(FontMap::get_type());
  g_type_ensure(Fontset::get_type());
  g_type_ensure(Layout::get_type());
  g_type_ensure(Renderer::get_type());

} // wrap_init()

} // Pango

