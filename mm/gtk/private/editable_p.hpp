// Generated by gmmproc 2.74.0 -- DO NOT MODIFY!
#ifndef _GTKMM_EDITABLE_P_H
#define _GTKMM_EDITABLE_P_H


#include <mm/glib/private/interface_p.hpp>

#include <mm/glib/private/interface_p.hpp>

namespace Gtk
{

class GTKMM_API Editable_Class : public Glib::Interface_Class
{
public:
  using CppObjectType = Editable;
  using BaseObjectType = GtkEditable;
  using BaseClassType = GtkEditableInterface;
  using CppClassParent = Glib::Interface_Class;

  friend class Editable;

  const Glib::Interface_Class& init();

  static void iface_init_function(void* g_iface, void* iface_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.
  static void insert_text_callback(GtkEditable* self, const char* text, int length, int* position);
  static void delete_text_callback(GtkEditable* self, gint p0, gint p1);
  static void changed_callback(GtkEditable* self);

  //Callbacks (virtual functions):
  static void do_insert_text_vfunc_callback(GtkEditable* self, const char* text, int length, int* position);
  static void do_delete_text_vfunc_callback(GtkEditable* self, int start_pos, int end_pos);
  static const char* get_text_vfunc_callback(GtkEditable* self);
  static void set_selection_bounds_vfunc_callback(GtkEditable* self, int start_pos, int end_pos);
  static gboolean get_selection_bounds_vfunc_callback(GtkEditable* self, int* start_pos, int* end_pos);
};


} // namespace Gtk


#endif /* _GTKMM_EDITABLE_P_H */

